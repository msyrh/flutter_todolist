// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_todolist/test/data/repositories/todo_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter_todolist/data/data_sources/todo_local_data_source.dart'
    as _i2;
import 'package:flutter_todolist/data/repositories/todo_repository_impl.dart'
    as _i3;
import 'package:flutter_todolist/domain/entities/todo.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

import '../data_sources/todo_local_data_source_test.mocks.dart';

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTodoLocalDataSource_0 extends _i1.Fake
    implements _i2.TodoLocalDataSource {}

/// A class which mocks [TodoRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepositoryImpl extends _i1.Mock
    implements _i3.TodoRepositoryImpl {
  MockTodoRepositoryImpl(MockTodoLocalDataSource mockTodoLocalDataSource) {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TodoLocalDataSource get localDataSource => (super.noSuchMethod(
      Invocation.getter(#localDataSource),
      returnValue: _FakeTodoLocalDataSource_0()) as _i2.TodoLocalDataSource);
  @override
  _i4.Future<List<_i5.Todo>> getTodos() =>
      (super.noSuchMethod(Invocation.method(#getTodos, []),
              returnValue: Future<List<_i5.Todo>>.value(<_i5.Todo>[]))
          as _i4.Future<List<_i5.Todo>>);
  @override
  _i4.Future<void> addTodo(_i5.Todo? todo) =>
      (super.noSuchMethod(Invocation.method(#addTodo, [todo]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updateTodo(_i5.Todo? todo) =>
      (super.noSuchMethod(Invocation.method(#updateTodo, [todo]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteTodo(String? id) =>
      (super.noSuchMethod(Invocation.method(#deleteTodo, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
