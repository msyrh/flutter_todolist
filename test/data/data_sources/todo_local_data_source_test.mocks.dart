// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_todolist/test/data/data_sources/todo_local_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:flutter_todolist/data/data_sources/todo_local_data_source.dart'
    as _i3;
import 'package:flutter_todolist/data/models/todo_model.dart' as _i4;
import 'package:hive/hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

import '../models/todo_model_test.mocks.dart';

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeBox_0<E> extends _i1.Fake implements _i2.Box<E> {}

/// A class which mocks [TodoLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoLocalDataSource extends _i1.Mock
    implements _i3.TodoLocalDataSource {
  MockTodoLocalDataSource(MockBox<_i4.TodoModel> mockBox) {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<_i4.TodoModel> get box => (super.noSuchMethod(Invocation.getter(#box),
      returnValue: _FakeBox_0<_i4.TodoModel>()) as _i2.Box<_i4.TodoModel>);
  @override
  _i5.Future<List<_i4.TodoModel>> getTodos() =>
      (super.noSuchMethod(Invocation.method(#getTodos, []),
              returnValue: Future<List<_i4.TodoModel>>.value(<_i4.TodoModel>[]))
          as _i5.Future<List<_i4.TodoModel>>);
  @override
  _i5.Future<void> addTodo(_i4.TodoModel? todo) =>
      (super.noSuchMethod(Invocation.method(#addTodo, [todo]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> updateTodo(_i4.TodoModel? todo) =>
      (super.noSuchMethod(Invocation.method(#updateTodo, [todo]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> deleteTodo(String? id) =>
      (super.noSuchMethod(Invocation.method(#deleteTodo, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
}
